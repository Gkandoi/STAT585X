HSA <- apply(HSA,c(1,2), function(x) gsub(",","",x))
typeof(HSA$Gene)
HSA <- as.data.frame(HSA)
typeof(HSA$Gene)
sum(HSA$Gene)
sum(as.numeric(HSA$Gene))
as.numeric(HSA$Gene)
HSA[,12] <- as.numeric(as.character(HSA[,12]))
sum(HSA$Gene)
HSA[,8] <- as.numeric(as.character(HSA[,8]))
sum(HSA$Protein)
HSA_html <- read_html("https://www.ncbi.nlm.nih.gov/genome/?term=txid9606[orgn]")
tables <- html %>% html_table(fill=TRUE)
#head(tables[[4]])
HSA <- tables[[4]][,1:13]
HSA <- HSA[which(HSA$Protein != ""),]
HSA <- as.data.frame(apply(HSA,c(1,2), function(x) gsub(",","",x)))
HSA[,c(8,12)] <- as.numeric(as.character(HSA[,c(8,12)]))
sum(HSA$Gene)
HSA <- tables[[4]][,1:13]
HSA <- HSA[which(HSA$Protein != ""),]
HSA <- as.data.frame(apply(HSA,c(1,2), function(x) gsub(",","",x)))
HSA[,12] <- as.numeric(as.character(HSA[,12]))
sum(HSA$Gene)
ATH_html <- read_html("https://www.ncbi.nlm.nih.gov/genome/?term=txid3702[orgn]")
tables <- ATH_html %>% html_table(fill=TRUE)
head(tables[[4]])
ATH <- tables[[4]][,1:13]
ATH <- ATH[which(ATH$Protein != ""),]
ATH <- as.data.frame(apply(ATH,c(1,2), function(x) gsub(",","",x)))
ATH[,12] <- as.numeric(as.character(ATH[,12]))
sum(ATH$Gene)
Genes <- c(27603,20306,22149,26492)
Proteins <- c(48315,111555,76485,46751)
plot(Genes,Proteins)
plot(y=Genes,Proteins)
Labels <- c("Arabidopsis thaliana","Homo sapiens","Mus musculus", "Danio rerio")
Genes <- c(27603,20306,22149,26492, 40446,28385,20238,13929,19121,23513,21356,24242)
Proteins <- c(48315,111555,76485,46751,58357,41382, 28178,30482,46459,66866,55395,47464)
Labels <- c("Arabidopsis","Humans","Mouse", "Zebrafish","Maize", "Rice", "C. elegans", "Fruitfly", "Chicken", "Rat", "Rhesus monkey", "Pig")
plot(y=Genes,Proteins)
library(ggplot2)
GeneProt <- as.data.frame(cbind(Genes,Proteins,Labels))
ggplot(GeneProt, aes(Genes, Proteins)) +
geom_point(colour = "red")
ggplot(GeneProt, aes(Genes, Proteins)) +
geom_point(colour = "red") + geom_label(Labels)
ggplot(GeneProt, aes(Genes, Proteins)) +
geom_point(colour = "red") + geom_label(aes(Labels))
ggplot(GeneProt, aes(Genes, Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels)
Labels
ggplot(GeneProt, aes(y = Genes, Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels)
GeneProt
ggplot(GeneProt, aes(aes(reorder(Genes, Proteins), Proteins))) +
geom_point(colour = "red") + geom_label(label = Labels)
ggplot(GeneProt, aes(reorder(Genes, Proteins), Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels)
ggplot(GeneProt, aes(reorder(Proteins, Genes), Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels)
ggplot(GeneProt, aes(reorder(Proteins, Genes), Genes)) +
geom_point(colour = "red") + geom_label(label = Labels)
ggplot(aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels)
ggplot(cbind(Genes,Proteins),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels) +
ylim(10000,120000) + xlim(10000,50000)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels) +
ylim(0,120000) + xlim(0,50000)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels) +
ylim(0,120000) + xlim(0,120000)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels) +
ylim(0,115000) + xlim(0,115000)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 45)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 90)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 10)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 0)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(aes(colour = "red", size = 10)) + geom_label(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(aes(size = 10)) + geom_label(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(size = 10) + geom_label(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(size = 10) + geom_text(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_text(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 1)
library(dplyr)
library(ggrepel)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_text_repel(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels) +
ylim(0,115000) + xlim(0,115000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels) +
ylim(0,115000) + xlim(0,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels) +
ylim(10000,115000) + xlim(10000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels,label.size = 0.25) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels,label.size = 0.5) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels,label.size = 5) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels,label.size = 5,box.padding = unit(0.01, "lines")) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels,label.size = 5,box.padding = 0.1) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels,label.size = 5,box.padding = unit(0.001, "lines")) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels,label.size = 5,box.padding = unit(1, "lines")) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, label.padding = unit(5, "lines")) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, label.padding = unit(1, "lines")) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, label.r = unit(0.1, "lines")) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, label.r = unit(5, "lines")) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, label.r = unit(1, "lines")) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
theme(axis.text=element_text(size=12))
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
theme(axis.text=element_text(size=1))
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 10 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1)
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
theme(axis.text=element_text(size=12),axis.title=element_text(size=14,face="bold"))
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"))
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold")) +
labs(title = "# of Genes vs Proteins")
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold")) +
ggtitle("# of Genes vs Proteins")
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
ggtitle("# of Genes vs Proteins") +
theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), plot.title = element_text(hjust = 0))
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
ggtitle("# of Genes vs Proteins") +
theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), plot.title = element_text(hjust = 5))
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
ggtitle("# of Genes vs Proteins") +
theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), plot.title = element_text(hjust = 0))
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
ggtitle("# of Genes vs Proteins") +
theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), plot.title = element_text(size=18,face="bold"))
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,60000) + geom_abline(intercept = 0, slope = 1) +
ggtitle("# of Genes vs Proteins") +
theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), plot.title = element_text(size=18,face="bold", hjust = 0.5))
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point() + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,50000) + geom_abline(intercept = 0, slope = 1) +
ggtitle("# of Genes vs Proteins") +
theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), plot.title = element_text(size=18,face="bold", hjust = 0.5))
ggplot(as.data.frame(cbind(Genes,Proteins)),aes(Genes,Proteins)) +
geom_point(colour = "red") + geom_label_repel(label = Labels, size = 5 ) +
ylim(5000,115000) + xlim(5000,50000) + geom_abline(intercept = 0, slope = 1) +
ggtitle("# of Genes vs Proteins") +
theme(axis.text=element_text(size=15),axis.title=element_text(size=18,face="bold"), plot.title = element_text(size=18,face="bold", hjust = 0.5))
install.packages(c("bootstrap", "chron", "circlize", "DBI", "exactRankTests", "GetoptLong", "ggpubr", "ggsci", "GlobalOptions", "ipred", "jsonlite", "lava", "maptools", "maxstat", "mclust", "mvtnorm", "nleqslv", "pbkrtest", "prodlim", "RcppEigen", "SparseM", "survival", "survminer", "swirl"))
install.packages(c("chron", "circlize", "cluster", "DBI", "exactRankTests", "GetoptLong", "ggpubr", "ggsci", "GlobalOptions", "jsonlite", "maxstat", "mclust", "mvtnorm", "pbkrtest", "RcppEigen", "SparseM", "survival", "survminer", "swirl"), lib="C:/Program Files/R/R-3.3.2/library")
source("https://bioconductor.org/biocLite.R")
biocLite(ask=FALSE)
source("https://bioconductor.org/biocLite.R")
biocLite("BiocUpgrade")
R
A <- c(0.5,0.2,0.1,0.2)
B <- c(0.55, 0.15, 0.05, 0.25)
C <- c(0.4,0.25,0.15,0.2)
sum(A)
sum(B)
sum(C)
cor(A,B)
as.matrix(A,B,C)
as.matrix(cbind(A,B,C))
t(as.matrix(cbind(A,B,C)))
cor(t(as.matrix(cbind(A,B,C))))
cor(t(as.matrix(cbind(A,B,C))),method = "spearman")
cor((as.matrix(cbind(A,B,C))))
cor((as.matrix(cbind(A,B,C))),method = "spearman")
A <- c(0.5,0.2,0.1,0.2)
B <- c(0.55, 0.25, 0.05, 0.15)
C <- c(0.4,0.2,0.15,0.25)
cor((as.matrix(cbind(A,B,C))))
cor((as.matrix(cbind(A,B,C))),method = "spearman")
nrow(available.packages(contriburl =
contrib.url("https://cran.rstudio.com/",
type = "both")))
nrow(available.packages(contriburl =
contrib.url("https://cran.rstudio.com/",
type = "both")))
knitr::opts_chunk$set(echo = TRUE)
setwd("D:/Research/PhD/Isopredict/Annotations/Mouse/Predictions")
#install.packages("data.table")
#install.packages("gtools")
#install.packages("plyr")
#source("http://bioconductor.org/biocLite.R")
#biocLite("GO.db")
#install.packages("splitstackshape")
#install.packages("dplyr")
#install.packages("tidyr")
library(data.table)
library(gtools)
library(plyr)
library(GO.db)
library(splitstackshape)
library(tidyr)
tuples <- function(x){
return(data.frame(permutations(length(x), 2, x, repeats.allowed = T, set = F), stringsAsFactors = F))
}
make_table <- function(infile) {
example <- cSplit(infile, "Genes.of.pathway", sep=" // ")
row.names(example) <- row.names(infile)
infile1 <- as.matrix(example, rownames(infile),colnames(example))
row.names(infile1) <- row.names(example)
class(infile1) <- "table"
new <- as.data.frame(infile1)
new1 <- new[complete.cases(new),]
new1$Var2 <- NULL
colnames(new1) <- c("Pathway","Gene_ID")
new1
}
MMU_GO <- read.table("MMU_GO_12Jan17", skip = 47, header = F, sep = "\t", strip.white=TRUE)
#summary(MMU_GO)
MMU_GO1 <- MMU_GO[-which(MMU_GO$V7 %in% c("IEA","NAS","ND") | MMU_GO$V4 != ""),]
MMU_GO1 <- droplevels(MMU_GO1)
rm(MMU_GO)
#summary(MMU_GO1)
MMU_GOP <- MMU_GO1[which(MMU_GO1$V9 == "P"), c(2,3,5,7,12)]
MMU_GOP <- droplevels(MMU_GOP)
colnames(MMU_GOP) <- c("Gene_MGI", "GeneName","GO_ID","Evidence","MoleculeType")
rm(MMU_GO1)
#summary(MMU_GOP)
View(MMU_GOP)
length(unique(MMU_GOP$GO_ID))
MGI_GeneName <- read.table("genes_IDs.gtf", header = T, sep = "\t",strip.white=TRUE)
#colnames(MGI_GeneName) <- c("GeneName", "Transcript_ID")
#summary(MGI_GeneName)
MMU_GOP_Transcript <- merge(MMU_GOP,MGI_GeneName, by.x = "GeneName", by.y = "Gene_ID")
#write.table(MMU_GOP,"MMU_GOP_nonIEA.txt", sep = "\t", quote = F, row.names = F, col.names = T)
MMU_GOP1 <- unique(MMU_GOP_Transcript[,c(1,2,3,6)])
MMU_GOP1 <- droplevels(MMU_GOP1)
rm(MMU_GOP);rm(MMU_GOP_Transcript)
#summary(MMU_GOP1)
Counts <- count(MGI_GeneName,'Gene_ID')
MMU_SIG <- as.data.frame(Counts[which(Counts$freq == 1),1])
colnames(MMU_SIG) <- "Gene_ID"
#summary(MMU_SIG)
#MMU_MIG <- as.data.frame(Counts[which(Counts$freq > 1),1])
#colnames(MMU_MIG) <- "GeneName"
#summary(MMU_MIG)
rm(Counts)
MMU_GOP_Prop <- MMU_GOP1[MMU_GOP1$GO_ID %in% names(which(table(MMU_GOP1$GO_ID) <= 1000)),]
MMU_GOP_Prop <- droplevels(MMU_GOP_Prop)
MMU_GOP_Prop <- MMU_GOP_Prop[MMU_GOP_Prop$GO_ID %in% names(which(table(MMU_GOP_Prop$GO_ID) >= 10)),]
MMU_GOP_Prop <- droplevels(MMU_GOP_Prop)
length(unique(MMU_GOP_Prop$GO_ID))
MMU_GOP_Prop <- MMU_GOP1[MMU_GOP1$GO_ID %in% names(which(table(MMU_GOP1$GO_ID) <= 300)),]
MMU_GOP_Prop <- droplevels(MMU_GOP_Prop)
MMU_GOP_Prop <- MMU_GOP_Prop[MMU_GOP_Prop$GO_ID %in% names(which(table(MMU_GOP_Prop$GO_ID) >= 10)),]
length(unique(MMU_GOP_Prop$GO_ID))
MMU_GOP_Prop <- MMU_GOP1[MMU_GOP1$GO_ID %in% names(which(table(MMU_GOP1$GO_ID) <= 300)),]
MMU_GOP_Prop <- droplevels(MMU_GOP_Prop)
MMU_GOP_Prop <- MMU_GOP_Prop[MMU_GOP_Prop$GO_ID %in% names(which(table(MMU_GOP_Prop$GO_ID) >= 20)),]
MMU_GOP_Prop <- droplevels(MMU_GOP_Prop)
length(unique(MMU_GOP_Prop$GO_ID))
View(MMU_GOP_Prop)
shiny::runApp('D:/Courses/Iastate/STAT585X/Lab6/Lab6')
runApp('D:/Courses/Iastate/STAT585X/Lab6/Lab6')
runApp('D:/Courses/Iastate/STAT585X/Lab6/Lab6')
runApp('D:/Courses/Iastate/STAT585X/Lab6/Lab6')
shiny::runApp('D:/Courses/Iastate/STAT585X/Lab6/Lab6')
runApp('D:/Courses/Iastate/STAT585X/Lab6/Lab6')
runApp('D:/Courses/Iastate/STAT585X/Lab6/Lab6')
runApp('D:/Courses/Iastate/STAT585X/Lab6/Lab6')
runApp('D:/Courses/Iastate/STAT585X/Lab6/Lab6')
getwd()
library(protr)
library(rDNAse)
hijack <- function(FUN, ...){
.FUN <- FUN
args <- list(...)
invisible(lapply(seq_along(args), function(i) {
formals(.FUN)[[names(args)[i]]] <<- args[[i]]
}))
.FUN
}
.kmer <- hijack(kmer, k = 6, normalize = T)
system.time(
a <- rnorm(1000)
b <- rnorm(1000)
c <- a + b
d <- a - b
e <- c + d - a*b
)
system.time(
a <- rnorm(1000),
b <- rnorm(1000),
c <- a + b,
d <- a - b,
e <- c + d - a*b
)
ptm <- proc.time()
a <- rnorm(1000)
b <- rnorm(1000)
c <- a + b
d <- a - b
e <- c + d - a*b
proc.time() - ptm
length(76057:69500);sum((76057:69500))
length(69499:62000);sum(69499:62000)
length(61999:53500);sum((61999:53500))
length(53499:43500);sum(53499:43500)
length(43499:31000);sum((43499:31000))
length(30999:1);sum(30999:1)
length(30999:15000);sum(30999:15000)
length(30999:15500);sum(30999:15500)
length(30999:16000);sum(30999:16000)
length(30999:15500);sum(30999:15500)
library(protr)
?extractCTriad()
x = readFASTA(system.file('protseq/P00750.fasta', package = 'protr'))[[1]]
extractCTriad(x)
y <- extractCTriad(x)
sum(y)
length(x)
length(strsplit(x))
length(strsplit(x,1))
length(strsplit(x,split = ""))
strsplit(x,split = "")
rm(ls())
rm(list = ls())
shiny::runApp('D:/Courses/Iastate/STAT585X/STAT585X/Project')
install.packages(rmdshower)
install.packages("rmdshower")
library(rmdshower)
if (interactive()) {
# table example
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
tableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderTable(iris)
}
)
# DataTables example
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
dataTableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderDataTable(iris)
}
)
}
library(shiny)
if (interactive()) {
# table example
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
tableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderTable(iris)
}
)
# DataTables example
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
dataTableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderDataTable(iris)
}
)
}
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
dataTableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderDataTable(iris)
}
)
shinyApp(
ui = fluidPage(
fluidRow(
column(12,
tableOutput('table')
)
)
),
server = function(input, output) {
output$table <- renderTable(iris)
}
)
setwd("D:/Courses/Iastate/STAT585X/STAT585X/Project")
ZFN <- unique(read.table(gzfile("./data/gene_association.zfin.gz"),skip = 28, header = F, sep = "\t", strip.white = F, stringsAsFactors = T, skipNul = T, quote = "",comment.char = "")[,c(3,5,7,9,14)])
Tble <- as.data.frame(
Genes <- length(unique(ZFN$V3)),
GOTerms <- length(unique(ZFN$V5)),
Evidence <- length(unique(ZFN$V7))
)
Genes <- length(unique(ZFN$V3)),
GOTerms <- length(unique(ZFN$V5)),
Evidence <- length(unique(ZFN$V7))
Genes <- length(unique(ZFN$V3))
GOTerms <- length(unique(ZFN$V5))
Evidence <- length(unique(ZFN$V7))
as.data.frame(Genes,GOTerms,Evidence)
as.table(Genes,GOTerms,Evidence)
as.table(Genes = Genes,GOTerms = GOTerms,Evidence = Evidence)
runApp()
runApp()
runApp()
runApp()
